apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deluge-ovpn.fullname" . }}
  labels:
    {{- include "deluge-ovpn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deluge-ovpn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deluge-ovpn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config
        emptyDir: {}
      - name: static-config
        secret:
          secretName: open-vpn-configuration
          optional: false
      initContainers:
      - name: move-secrets
        image: busybox:1.29.2
        command:
        - /bin/sh
        - -c
        - |
          echo "running"
          ls -la
          ls -la /openvpnconfig/
          mkdir /config/openvpn/
          cp /openvpnconfig/* /config/openvpn/.
          ls -la /config/openvpn/
        volumeMounts:
        - name: config
          mountPath: /config
        - name: static-config
          mountPath: /openvpnconfig/
        securityContext:
          runAsUser: 568
          runAsGroup: 568
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          
          env:
          - name: VPN_CLIENT
            value: openvpn
          - name: VPN_ENABLED
            value: "yes"
          - name: VPN_PROV
            value: "custom"
          - name: LAN_NETWORK
            value: "10.0.0.0/8"
          - name: ENABLE_PRIVOXY
            value: "yes"
          - name: DEBUG
            value: "true"
          ports:
            - name: http
              containerPort: 8112
              protocol: TCP
            - name: privoxy
              containerPort: 8118
              protocol: TCP
            - name: daemon
              containerPort: 58846
              hostPort: 8115
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /config
        
      
